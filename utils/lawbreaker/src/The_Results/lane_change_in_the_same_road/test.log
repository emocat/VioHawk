2023-11-25 19:13:04, INFO: Current Test Case: lane_change_in_the_same_road.txt
2023-11-25 19:13:09, INFO: Current scenario is scenario0.

2023-11-25 19:13:09, INFO: 
 Evaluate Scenario scenario0 with Assertion 0: (((((((((((((((G ((((((trafficLightAheadcolor==3) & ((stoplineAhead<=2.0 | junctionAhead<=2.0))) & (~PriorityNPCAhead==1)) & (~PriorityPedsAhead==1)) -> (F[0,2] (speed>0.5))))) & (G ((((((trafficLightAheadcolor==2) & ((stoplineAhead<=0.0 | (currentLanenumber+1)==0)))) -> ((F[0,2] (speed>0.5)))) & ((((((trafficLightAheadcolor==2) & stoplineAhead<=3.5) & (~stoplineAhead<=0.5)) & currentLanenumber>0)) -> ((F[0,3] (speed<0.5)))))))) & (G (((((((trafficLightAheadcolor==1) & ((stoplineAhead<=2.0 | junctionAhead<=2.0))) & (~(direction==2)))) -> ((F[0,3] (speed<0.5)))) & (((((((trafficLightAheadcolor==1) & ((stoplineAhead<=2.0 | junctionAhead<=2.0))) & direction==2) & (~PriorityNPCAhead==1)) & (~PriorityPedsAhead==1))) -> ((F[0,2] (speed>0.5)))))))) & ((G ((currentLanenumber>=2 -> ((speed>=speedLimitlowerLimit) & (speed<=speedLimitupperLimit))))) & (G (((isLaneChanging==1 & currentLanenumber>=2) -> (~PriorityNPCAhead==1)))))) & (G ((speed>=speedLimitlowerLimit & speed<=speedLimitupperLimit)))) & (((G (((((direction==1 | direction==2) | isTurningAround==1)) -> (speed<=30))))) & ((G ((((((rain>=0.5 | fog>=0.5) | snow>=0.5) | visibility<=50)) -> (speed<=30))))))) & (G ((isOverTaking==1 -> (((turnSignal==1) & ((((F[-1,2] (hornOn==1))) | ((((highBeamOn==1 & ((highBeamOn==1 -> ((F[0,2] (lowBeamOn==1))))))) | ((lowBeamOn==1 & ((lowBeamOn==1 -> ((F[0,2] (highBeamOn==1)))))))))))) & ((F[0,10] (((turnSignal==2) & (((((isLaneChanging==1) -> (NearestNPCAhead<=5.0))) & (isLaneChanging==1)))))))))))) & (G ((~(gear==2))))) & (((((G (((((((trafficLightAheadcolor==3 & direction==1) & Time<=20.0) & Time>=7.0)) -> (turnSignal==1)) & ((((trafficLightAheadcolor==3 & direction==1) & ((Time>=20.0 | Time<=7.0)))) -> ((turnSignal==1 & lowBeamOn==1)))))) & (G (((trafficLightAheadcolor==3 & (((~NPCAheadAhead<=8.0) | ((((NPCAheadAhead<=8.0 -> (F[0,2] (NPCAheadspeed>0.5)))) & NPCAheadAhead<=8.0))))) -> (((F[0,3] (speed>0.5))) & (~NPCAheadAhead<=0.5)))))) & (G (((trafficLightAheadcolor==1 & (((stoplineAhead<=2.0 | junctionAhead<=2.0) | NPCAheadAhead<=0.5))) -> (F[0,2] (speed<0.5)))))) & (G (((((direction==2 & NPCAheadAhead<=2.0) & ((F[0,2] (NPCAheadspeed<0.5))))) -> (F[0,3] (speed<0.5)))))) & (G ((((((direction==2 | direction==1)) & ((PriorityNPCAhead==1 | PriorityPedsAhead==1)))) -> (F[0,2] (speed<0.5))))))) & (G (((((signalAhead==0 & ((PriorityNPCAhead==1 | PriorityPedsAhead==1))) & junctionAhead<=1.0)) -> (F[0,2] (speed<0.5)))))) & (G ((((isTrafficJam==1 & (((NPCAheadspeed<0.5 | NPCAheadAhead<=0.5) | junctionAhead<=1.0)))) -> (F[0,2] (speed<0.5)))))) & ((G ((direction==1 -> turnSignal==1))) & (G ((direction==2 -> turnSignal==2))))) & (G ((((((((((~streetLightOn==1) & ((Time>=20.0 | Time<=7.0)))) | (((rain>=0.5 | fog>=0.5) | snow>=0.5))) & (~NPCAheadAhead<=10.0))) -> highBeamOn==1) & (NPCAheadAhead<=10.0 -> (~highBeamOn==1))) & (fog>=0.5 -> ((fogLightOn==1 & warningflashOn==1))))))) & (G (((((crosswalkAhead<=5.0 | ((signalAhead==0 & junctionAhead<=1.0)))) & ((Time>=20.0 | Time<=7.0))) -> ((F[0,3] ((highBeamOn==1 & ((highBeamOn==1 -> (F[0,3] (lowBeamOn==1))))))) | (F[0,3] ((lowBeamOn==1 & ((lowBeamOn==1 -> (F[0,3] (highBeamOn==1)))))))))))) & (G (((~honkingAllowed==1) -> (~hornOn==1))))) 
 
