// road merging or T junction
map_name = "san_francisco";
car_model = "gt_sensors";
initial_position = "lane_317" -> 240;
ego_init_state = (initial_position);
target_position = "lane_321" -> 50;
ego_target_state = (target_position);
vehicle_type = (car_model);
ego_vehicle = AV(ego_init_state, ego_target_state, vehicle_type);

//npc1: move from lane_328 to lane_320
npc1_init_position = "lane_328"->20;
npc1_init_state = (npc1_init_position, ,5.0);
wp11 = ("lane_328"->100, ,5.0);
wp12 = ((553307.261867189, 4183201.9591673343), , 4.5);
wp13= ((553309.3614155288, 4183208.8865965335), , 4.0);
wp14= ((553305.65, 4183212.53), , 5.0);
wp15 = ("lane_320"->50, ,6.0);
npc1_waypoints = (wp11, wp12, wp13, wp14, wp15);
npc1_destination = ("lane_320"->100);
npc1 = Vehicle(npc1_init_state, Waypoint(npc1_waypoints));

//npc2: move from lane_331 to lane_321
npc2_init_position = "lane_331"->20;
npc2_init_state = (npc2_init_position, ,5.0);
wp21 = ("lane_331"->100, ,5.0);
wp22 = ("lane_1160"->0, , 4.5);
wp23= ((553315.2383076187, 4183207.2174681155), , 4.0);
wp24= ((553312.2639423843, 4183213.1879271), , 4.0);
wp25 = ("lane_321"->50, ,6.0);
npc2_waypoints = (wp21, wp22, wp23, wp24, wp25);
npc2_destination = ("lane_321"->100);
npc2 = Vehicle(npc2_init_state, Waypoint(npc2_waypoints), npc2_destination);

//npc3: move from lane_330 to lane_322
npc3_init_position = "lane_330"->20;
npc3_init_state = (npc3_init_position, ,5.0);
wp31 = ("lane_330"->100, ,5.0);
wp32 = ("lane_1161"->0, , 4.5);
wp33= ((553319.5, 4183208.69), , 4.0);
wp34 = ((553314.3420368667, 4183217.027038428), , 5.0);
wp35 = ("lane_322"->50, ,6.0);
npc3_waypoints = (wp31, wp32, wp33, wp34, wp35);
npc3_destination = ("lane_322"->100);
npc3 = Vehicle(npc3_init_state, Waypoint(npc3_waypoints), npc3_destination);

//npc4: move from lane_329 to lane_323
npc4_init_position = "lane_329"->20;
npc4_init_state = (npc4_init_position, ,5.0);
wp41 = ("lane_329"->50, ,6.0);
wp42 = ("lane_1162"->0, , 5);
wp43= ((553322.757594728, 4183206.63), , 3);
wp44 = ((553316.4349628921, 4183219.8604124514), , 7.0);
wp45 = ("lane_323"->50, ,5.0);
npc4_waypoints = (wp41, wp42, wp43, wp44, wp45);
npc4_destination = ("lane_323"->100);
npc4 = Vehicle(npc4_init_state, Waypoint(npc4_waypoints), npc4_destination);

time = 12:00;
weather = {rain:0.5, snow: 0.1, wetness: heavy};
evn = Environment(time, weather);

scenario0 = CreateScenario{load(map_name);
			        ego_vehicle;
			        {npc1, npc2, npc3, npc4};
			        {}; // no pedestrians;
			        {}; // no obstacles;
			        evn;
};

Trace trace = EXE(scenario0);

//law38
//Green Lights
law38_sub1_1 = (trafficLightAhead.color == green) & (stoplineAhead(2) | junctionAhead(2)) & ~PriorityNPCAhead & ~PriorityPedsAhead;
law38_sub1_2 = F[0,2](speed > 0.5);
law38_sub1 = G (law38_sub1_1 -> law38_sub1_2); 
//Yellow Lights
law38_sub2_1 = ((trafficLightAhead.color == yellow) & (stoplineAhead(0) | currentLane.number .+ 1 == 0)) -> (F[0,2] (speed > 0.5));
law38_sub2_2 = ((trafficLightAhead.color == yellow) & stoplineAhead(3.5) & ~stoplineAhead(0.5) & currentLane.number > 0) -> (F[0,3] (speed < 0.5));
law38_sub2 = G (law38_sub2_1 & law38_sub2_2); 
//Red LightS
law38_sub3_1 = ((trafficLightAhead.color == red) & (stoplineAhead(2) | junctionAhead(2)) & ~(direction == right)) -> (F[0,3] (speed < 0.5));
law38_sub3_2 = ((trafficLightAhead.color == red) & (stoplineAhead(2) | junctionAhead(2)) & direction == right & ~PriorityNPCAhead & ~PriorityPedsAhead) -> (F[0,2] (speed > 0.5));
law38_sub3 = G (law38_sub3_1 & law38_sub3_2); 
law38 = law38_sub1 & law38_sub2 & law38_sub3;


//law44
law44_sub1 = currentLane.number >= 2;
law44_sub2 = (speed >= speedLimit.lowerLimit) & (speed <= speedLimit.upperLimit);
law44_sub3 = isLaneChanging & currentLane.number >= 2;
law44_sub4 = G(law44_sub1 -> law44_sub2);
law44_sub5 = G(law44_sub3 -> ~PriorityNPCAhead);
law44 = law44_sub4 & law44_sub5;


//law45
law45 = G( speed >= speedLimit.lowerLimit & speed <= speedLimit.upperLimit);


//law46
law_46_sub2 = G( (direction == left | direction == right | isTurningAround) -> (speed <= 30 ));
law_46_sub3 = G( (rain >= 0.5 | fog >= 0.5 | snow >=0.5 | visibility <= 50 ) -> (speed <= 30));
law46 = (law_46_sub2) & (law_46_sub3);

//law47
law47_sub1 = (turnSignal == left) & ((F[-1,2](hornOn)) | ((highBeamOn & (highBeamOn -> (F[0, 2](lowBeamOn)) ) ) | (lowBeamOn & (lowBeamOn -> (F[0, 2](highBeamOn)) ) ))) & (F[0, 10]( (turnSignal == right) & (((isLaneChanging) -> (NearestNPC(5))) & (isLaneChanging) ) ));
law47 = G(isOverTaking -> law47_sub1);


//law50
law50 = G(~(gear == 2)); 


//law51
//turn_left
law51_sub3_1 =(trafficLightAhead.color == green & direction == left & Time <= 20:00 & Time >= 7:00) -> (turnSignal == left);
law51_sub3_2 =(trafficLightAhead.color == green & direction == left & (Time >= 20:00 | Time <= 7:00)) -> (turnSignal == left & lowBeamOn);
law51_sub3 = G(law51_sub3_1 & law51_sub3_2);  
//go_in_line_at_green
law51_sub4_1 = trafficLightAhead.color == green & (~NPCAhead(8) | (( NPCAhead(8) -> F[0,2](NPCAhead.speed > 0.5)  ) & NPCAhead(8)));
law51_sub4_2 = (F[0, 3](speed > 0.5)) & ~NPCAhead(0.5);
law51_sub4 = G(law51_sub4_1 -> law51_sub4_2);
//stop_in_line_at_red
law51_sub5_1 = trafficLightAhead.color == red & (stoplineAhead(2) | junctionAhead(2) | NPCAhead(0.5));
law51_sub5_2 = F[0, 2](speed < 0.5);
law51_sub5 = G(law51_sub5_1 -> law51_sub5_2);  
//tuen_right_stop_in_line_at_red
law51_sub6 = G((direction == right & NPCAhead(2) & (F[0, 2](NPCAhead.speed < 0.5)) ) -> F[0, 3] (speed < 0.5));
//priority_for_straight
law51_sub7 = G(((direction == right | direction == left) & (PriorityNPCAhead | PriorityPedsAhead)) -> F[0, 2] (speed < 0.5));
law51 = law51_sub3 & law51_sub4 & law51_sub5 & law51_sub6 & law51_sub7;


//law52
law52 = G((signalAhead == 0 & (PriorityNPCAhead | PriorityPedsAhead) & junctionAhead(1)) -> F[0, 2] (speed < 0.5));


//law53
law53 = G((isTrafficJam & (NPCAhead.speed < 0.5 | NPCAhead(0.5) | junctionAhead(1) ))-> F[0, 2] (speed < 0.5));

//law57
law57_sub1 = G(direction == left ->  turnSignal == left);
law57_sub2 = G(direction == right ->  turnSignal == right);
law57 = law57_sub1 & law57_sub2;

//law58
law58_sub1_1 = (~streetLightOn & (Time >= 20:00 | Time <= 7:00) ) | (rain >= 0.5 | fog >= 0.5 | snow >= 0.5);
law58_sub1 = (law58_sub1_1 & ~NPCAhead(10))-> highBeamOn;
law58_sub2 =  NPCAhead(10) -> ~highBeamOn;
law58_sub3 = fog >= 0.5 -> (fogLightOn & warningFlashOn);
law58 = G(law58_sub1 & law58_sub2 & law58_sub3);

//law59
law59_sub1 = (crosswalkAhead(5) | (signalAhead == 0 & junctionAhead(1)) ) & (Time >= 20:00 | Time <= 7:00);
law59_sub2 = F[0,3](highBeamOn & (highBeamOn -> F[0,3](lowBeamOn)) ) | F[0,3](lowBeamOn & (lowBeamOn -> F[0,3](highBeamOn)) );
law59 = G(law59_sub1 ->  law59_sub2);


//law62
law62 = G (~honkingAllowed ->  ~hornOn);


trace |= law47;